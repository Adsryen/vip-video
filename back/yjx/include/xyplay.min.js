/*
	软件名称：xyplayer
	软件版本：X3.3 正式版
	软件作者：http://00000
	--------------------------------------------------------------------------------------------------------------------
	开发说明：
	使用的主要程序语言：javascript(js,jquery)及php;
	功能：视频解析;
	特点：支持对接一次解析,搜索资源站资源,支持线路切换,剧集列表,自动播放下集等；
	=====================================================================================================================
*/ 
/* global opera, java, Base64, top*/

! (function() {
 
'use strict';   //严格模式
var $this;
var xyplayer = function(c) 
{	    	     
              //显示版权信息
	       this.onVer();	  	    		    		
               //全局变量,方便全局操作。
	        $this=this;		
		//全局变量，网址url参数,取"?url="后面全部文本。		
		this.url=_GET("url",true);              
               //全局变量，网址wd参数		
		this.wd=_GET("wd");		
		//全局变量，网址id参数		
		this.id=_GET("id");
                //全局变量，网址flag参数		
		this.flag=_GET("flag");						
		//全局变量，网址type参数
		this.type = _GET("type");		
	       //全局变量,线路切换图标容器
	       this.logo=c.logo||'.logo';
		//全局变量,剧集切换图标容器
		this.list=c.list||'.list';          
		//全局变量,线路列表容器		   
		this.line=c.line||'#line';		 
		//全局变量,播放列表容器
		this.plist=c.plist||'#list' ;		 
		//全局变量,播放列表 来源列表容器	   
	        this.flaglist=c.flaglist||'#flaglist';
		//全局变量,播放列表 视频列表容器
		this.playlist=c.playlist||'#playlist';  				
		//全局变量,视频容器
	         this.player=c.player||'#player'; 			
		//全局变量,直播容器
	         this.plive=c.plive||'#live'; 			
		//全局变量,广告容器		
		this.playad=c.playad||'#playad'; 		
		//全局变量,是否自动隐藏
		this.autohide=c.autohide||false;
		//全局变量,加载图片	
	        this.loadimg=c.loadimg||false; 		 			
		//全局变量,api地址	 
	        this.api=c.api||'api.php';		  
		//全局变量,显示标题
		this.mytitle = document.title;		
		//全局变量,当前线路         
		this.myurl=0;		 
		//全局变量,线路列表		
		this.url_array=[];		
		 //全局变量,播放数据		 
		this.list_array=[];							
		//全局变量,当前来源		
		this.pflag=0;		  		  
		//全局变量,当前集数		
	        this.part=0; 		 		 
		//全局变量,来源列表
		this.flaglist_array=[];		 
		//全局变量,集数列表		
                this.playlist_array=[];		 
                //全局变量,线路选择标志		 
		this.onflag='auto';		 
		//全局变量,设备标志
		this.lswap=is_mobile();      
		//全局变量,app标志
		this.app=false;					
		//获取播放配置											
	        this.GetPlayParm();	 
};
  

xyplayer.prototype={
	
	/*
		主要函数部分开始
		主接口函数：
    */
	  
init: function(c) 
{	
  //全局变量,播放参数	
   this.play=(new Function('return(' + strdecode(c)+')'))();	
   //全局变量，超时时间
    this.timeout=this.play.define.timeout*1000;			
   //判断是否显示LOGO
   if(this.play.style.logo_show==="1"){$(this.logo).show(); }else{$(this.logo).hide();}		
  //刷新线路列表
   this.url_array=this.play.define.jx_url;this.reline();	
   //检测是否允许调试
    endebug(this.play.off.debug,this.play.all.decode);			
   //智能设置变量(选择线路,广告显示时间,广告地址,使用播放器)			  
    if (this.lswap)
    {		   
       	 this.intLine = this.play.line.wap.line;
         this.adsTime = this.play.line.wap.adtime;
         this.adsPage = this.play.line.wap.adPage;
		 this.myplayer = this.play.play.wap.player;
		 this.autoplay=this.play.play.wap.autoplay;
    } else {
        this.intLine = this.play.line.pc.line;
        this.adsTime = this.play.line.pc.adtime;
        this.adsPage = this.play.line.pc.adPage;
		this.myplayer = this.play.play.pc.player;
		this.autoplay=this.play.play.pc.autoplay;
    };
    //线路智能检测
    var autoline=this.play.line.all.autoline;
	if (this.url !== "" && autoline.off === "1" ) {for(var key in autoline.val){ 	
	    if(this.url.indexOf(key) > -1){		
		this.intLine=autoline.val[key];
		this.log('线路智能检测：' +this.intLine);
		break; 
        }
		
	  }
	
	}

   //播放器智能检测
    var autoline=this.play.play.all.autoline;
    if (this.url !== "" && autoline.off === "1" ) {for(var key in autoline.val){ 	
	    if(this.url.indexOf(key) > -1){		
		this.myplayer=autoline.val[key];
		this.log('播放器智能检测：' +this.myplayer);
		break; 
        }
		
	  }
	
	}
   
    //设置当前线路及播放标志
    this.myurl=getCookie("url_num");
    
    
    
    //刷新换线路
     if (this.play.off.autoline==="1") {
         
            this.myurl++; if (this.myurl >=this.url_array.length ) {this.myurl=0;}  
            if(this.play.off.ckplay==="0"){this.onflag='line';}
            setCookie("url_num",this.myurl, this.timeout);  
     this.log('刷新换线路：' +this.myurl);       
    }else{
        
        if(this.myurl==="" || this.myurl==='null' ){this.myurl=Number(this.intLine)-1; }else if(this.play.off.ckplay==="0"){this.onflag='line';}
        
    }
        
        
        
        
        
    this.log('当前线路:' +(Number(this.myurl)+1));
    this.log('当前播放器：' +this.myplayer);		
    //加载广告			
	this.loadad();	 
    //监听鼠标动作 
	this.control();	
			
    //链接跳转  
    if(this.play.off.jmp==='1'){this.lsurljmp();}
    	  
    //判断类型	
    if(this.type==='')
    {	
	 if(this.id!=="" && this.flag!==""){this.type="id";}else if(this.wd!==""){this.type="wd";}else if(this.url!=="" ){this.type="url";}else{this.type="null";}
    }
    this.log("解析类型:"+this.type);
    switch(this.type)
    {
      case 'wd':      		
		this.listname=this.wd;
		this.getvideo();
        break;
      case 'url':
         this.listname=this.url;
	  if(!this.headplay('url',this.url)){if(this.play.off.link==='1' && this.type==="url"){this.Getvideobyurl();}else if(this.play.off.yun==="1"){this.getvideo();}else{this.AutoPlay('line',this.getvideo("url",this.url,true));}}
	  break;
      case 'id':	  
         this.listname=this.flag+this.id;
		 this.getvideo();
         break;
      case 'null':	 
          $(this.player).show();$(this.playad).hide;
          this.echo("URL地址或关键字不能为空!");
          this.log("URL地址或关键字不能为空!"); 
		  break;
    }
	
     
},
 

/**   内部函数: 成功 回调函数  */	 
  success:function(code,data,get){		   
	 get=get||false;
	 switch(code)
     {	
	    /* 获取播放配置成功 */
        case 1:		
            
			this.app=data.app;
		
			this.init(data.val);
			
			break;	
			    			    
	   /*  链接查询成功  */ 	
        case 2:	
	        this.log("链接查询成功");
	        //获取标题
			this.title=data.title||'';  if("undefined"!== typeof data.player&&data.player!==""){this.myplayer=data.play;}		  	                            		   		   	
		   //调用云播放					
			if(this.onflag!=='line' ){this.AutoPlay('list',data.url ,data.type);}else{this.AutoPlay('line');}			  
		   //重新加载线路列表
		     this.reline();	
                  //刷新选集列表并显示图标
		    if(data.info){this.list_array=data.info;this.relist();if(this.play.style.list_show==="1"){$(this.list).show();};}	 						
			//设置当前集数
			this.part=getCookie(this.listname)||(Number(data.part)-1);if(data.part>this.playlist_array.length || !this.part){this.part=0;}						
		  //后台继续获取全部源站数据					       
			if(!data.info){this.getvideo("url",this.url,true);}			
		    break;	

	    /* 获取源站视频数据成功(getvideo) */ 		 
		case 3:		   		    								
			
                   this.onflag='yun';
                    //获取标题和播放器
		   this.title=data.title||'';  if("undefined"!== typeof data.player && data.player!==""){this.myplayer=data.play;}	
             
		   //刷新选集列表并显示图标
		    if(data.info){this.list_array=data.info;this.relist(true);if(this.play.style.list_show==="1"){$(this.list).show();}}		 						
			
                     //设置当前集数
			this.part=getCookie(this.listname)||(Number(data.part)-1);if(data.part>this.playlist_array.length || !this.part){this.part=0;}			
        
                     //重新加载线路列表
		     this.reline(); var url=(this.playlist_array.length > 0)? (this.playlist_array[this.part]) : data.url;
              
                  //如果非后台获取,调用云播放
			if(!get){		
			    this.log("获取云资源成功");			 					
			     if(this.onflag!=='line'){this.AutoPlay('list',url,data.type);}else{this.AutoPlay('line');};
			 }
    
			break;			 	     
	     	 		
		 /* 搜索视频成功(wd) */ 		 
		  case 4:		    
		     this.log("片名搜索视频成功");
		     //全局变量，用于外部调用
		     this.data=data;					 
		     $(this.player).html('<iframe  width="100%" height="100%" src="' + 'so.html?wd=' +this.wd+ '" frameborder="0" border="0" marginwidth="0" marginheight="0" scrolling="no" ></iframe>');         
		     break;		 		 
		 
		 /*  搜索视频成功(id,flag) */ 		 
		  case 5:		  			
			this.log("id搜索视频成功");
			//获取标题和播放器	
			this.title=data.title||''; if("undefined"!== typeof data.player&&data.player!==""){this.myplayer=data.play;}	
			//调用云播放					
			if(this.onflag!=='line'){this.AutoPlay('list',data.url,data.type);}else{this.AutoPlay('line');}				
			//重新加载线路列表
			this.reline();
            //刷新选集列表并显示图标
		    if(data.info){this.list_array=data.info;this.relist();if(this.play.style.list_show==="1"){$(this.list).show();}}			   
		    //获取当前集数
			this.part=getCookie(this.listname)||(Number(data.part)-1);if(data.part>this.playlist_array.length || !this.part){this.part=0;}				
			
		    break;		 		 		                 		
		
		}					 
	 },


/*    内部函数  获取资源(ajax)失败 回调函数  */	 
	 error:function(code,data)
	 {		  			
		switch(code)
		 {		 		   		 
		  
		  /* 获取播放配置失败 */
		  case 1:		  
		    $(this.logo).hide();
            this.echo("读取配置失败,请检查防火墙设置!");		    			
			break;		  
 
		  /* 链接查询失败  */          
           case 2:        
	        this.log("链接查询失败");
			//调用云搜索			
			if(this.play.off.yun==="1"){this.getvideo();}else{this.AutoPlay('line');};						
			break;	
        
         /* 获取云资源失败  */
          case 3:
			this.log("获取云资源失败");
			if(this.type==='url')
			{
			  if("undefined"!==typeof data && "undefined"!==typeof data.code&& data.code===404){			  					 
		      this.href("404.html");			     
		      break;		 		 
		 
			  }else{
			  
			    this.echo("服务器调用解析中,请稍后...");			
			    this.AutoPlay('line');
			    break;	
			  }
			}else{
				this.errorHandler('未搜索到资源',true);	
			}					
			break;	

		 	
			
		 }		 	 
	 },
	 	 

 /*  内部函数 链接跳转 检测  */
 lsurljmp:function () 
 {	
        var list=this.play.define.url_jmp;
 	for (var key in list)
        {       
            if(list[key].off==="1")
            {        
              var reg = new RegExp(list[key].url, "i");
              if(reg.test(this.url)){this.url=list[key].href;break;} 
            }
         }    
    }, 
 
 /*  1. 内部函数 获取播放配置  */  
 GetPlayParm:function () 
 {	
 $.ajax({
        url: $this.api + '?tp=getparm',
        dataType: 'jsonp',
        jsonp: 'cb',	
        beforeSend: function(){},
        success: function(data){if(data.success){$this.success(1,data);} else {$this.error(1,data);}},
        error: function(){$this.error(1);}
     });
 },

 
 /* 2. 内部函数 链接查询数据 */  
 Getvideobyurl:function (url) 
 {	
  var tp='tp=link&url='; if($this.play.off.debug==="1"){tp='dd=1&'+tp;}	 
  url=url||$this.url;
    $.ajax({
        url: $this.api + '?' + tp + encodeURIComponent(url),
        timeout:$this.timeout,
        dataType: 'jsonp',
        jsonp: 'cb',
        beforeSend: function(){$this.beforeSend(2);},
        success: function(data){if(data.success){$this.success(2,data);}else{$this.error(2,data);}}, 
		error: function(){$this.error(2);}
     });
 },
 
            
 /* 3-6  内部函数 搜索云资源  */	  
   getvideo:function(type,val,get)
   {	   	 	   
      var type=type||$this.type; var url=val||$this.url; var wd= val||$this.wd; get=get||false;	   
	   var lsword = false;var lsflag = false;var lsget=false;
	  switch (type)	  
	  {
	case "url":		  
	      var tp = "url";       	  		  
          var word = "=" + encodeURIComponent(url);         		   
		  break;		 
        case "id" :		  		    
		   word = "";
           tp = "flag=" + $this.flag + "&id=" +$this.id;
           lsflag = true;
		   break;	  
	    case "wd" :	     
		    word = encodeURI(wd);
            if(get){tp = "tp=wd&wd=";}else{tp = "wd=";lsword = true;}
	        break;	      	 
	   }; 

	   $.ajax({
        url: $this.api + '?' + tp + word,
        timeout: $this.timeout,
        dataType: 'jsonp',
        jsonp: 'cb',
        beforeSend:function(){if(!get){$this.beforeSend(3);}},
        success: function(data) {
			 switch(type)
			 {
			  case "url":
			    if(data.success){$this.success(3,data,get);}else{if(!get){$this.error(3,data);}}
				break;
			  case "id" : 
			   if(data.success){$this.success(5,data);}else{if(!get){$this.error(3,data);}}
			   break;
			 case "wd" :
                $this.success(4,data);
				 break;
			  
			 }
		},
        error: function(){if(!get){$this.error(3);}}
     });
	
    },
       
   
 /*   内部函数  监听鼠标动作         */ 
   control:function() {		

   //屏蔽右键
    $(document).ready(function(){$(document).bind("contextmenu",function(e){return false;});}); 
   
   //LOGO鼠标移动
   $($this.logo).mouseover(function(){if(!$this.lswap){$this.reline();$($this.line).show();}});			 
   //LOGO 鼠标点击
   $($this.logo).click(function(){$this.online();});	 		 
   //线路列表 鼠标移出
   $($this.line).mouseleave(function(){if(this.autohide){$($this.line).hide();}}); 
   //选集列表 鼠标移动
	  $($this.list).mouseover(function() 
	  {     	  
	    if (!$this.lswap)
	    { 
	     $this.relist();
	     if($this.play.style.flaglist_show==="1"){$($this.flaglist).show();}
		 if($this.play.style.playlist_show==="1"){$($this.playlist).show();}
		
	    }
      }); 	    
    //播放列表图标 鼠标点击事件	
    $($this.list).click(function(){$this.onlist();});	 
	//播放列表 鼠标移出
	$(this.plist).mouseleave(function(){$($this.flaglist).hide();$($this.playlist).hide();});
    //列表 鼠标点击
	$(document).on('click', '.click_work', function() {		
    var num = $(this).attr("num");
    var type = $(this).attr("type");		
	if(type==="line")
	{				  
	   switch(num)
		{		 		   		 		 
        //帮助
		case 'h':		      	 
				  switch($this.onflag)
				  {					   
					case 'auto'  : 					  
					  alert($this.play.all.ver + "\r\n当前线路：自动" + "\r\n" + $this.play.all.info);
					  break;
					
					case 'yun'  :					  
					  alert($this.play.all.ver + "\r\n当前线路：云播放" + "\r\n"  + $this.play.all.info);
					  break;
					
					case 'line'  :					
					  alert($this.play.all.ver + "\r\n当前线路：线路" + (Number($this.myurl)+1) +"\r\n" + $this.play.all.info);                   
				          break;
				  
				  case 'live'  :					
					  alert($this.play.all.ver + "\r\n当前直播：" + $this.live_num + "\r\n"  + $this.play.all.info);
                                          break;

				  }
				  //if($this.lswap){$($this.line).hide();}		
		          return;	
		//自动  
		case 'auto':
		         this.onflag='auto'; 
                        $this.myurl = "";setCookie("url_num", 'null', 0);
			//$this.live_num="";setCookie("live_num","", $this.timeout)                
		        location.replace(location.href);
                         break;				 
		//云播放		 
		case 'yun':			     
			 if($this.play.style.list_show==="1"){$($this.list).show();}
                          this.onflag='yun';
			  $this.myurl = "";setCookie("url_num", 'null', 0);                                
			  $this.AutoPlay('list'); 					
                          break;
		//线路
                
                default: 
                 
                        this.onflag='line'; 
                        $this.myurl=Number(num); 			 
			if($this.type==='url'){$this.AutoPlay('line');}else{$this.AutoPlay('line',$this.playlist_array[$this.part]);};			
			break;
                               
                }
                 
        if($this.lswap || $this.autohide){$($this.line).hide();}$this.reline();        
                
                       			 	   
	//自定义链接      
	}else if(type==="link"){	
			var url=$this.play.define.jx_link[num];			
		    setTimeout(url,0);			
	
	//直播      
	}else if(type==="live"){	
			$this.liveplay(num);			
		   //$this.echo("?live=1&url="+strdecode(url,true),false,true);
	
	//视频列表	
	}else if(type==="list"){			
			   $this.part = Number(num);               			   
			   $this.AutoPlay('list');			   
                           if($this.lswap){$($this.flaglist).hide();$($this.playlist).hide();}{$this.replaylist();}			   
	//来源列表
	}else if(type==="flag"){
			  $this.pflag=Number(num);      
			  $this.reflaglist();$this.replaylist($this.pflag);			  			  			  
			   //来源只有一个视频时是否自动选择播放
				/*
				 if ($this.playlist_array.length == 1) 
				 {
                  $this.part = 0;
				  $($this.playlist).hide();$($this.flaglist).hide();							
				  $this.AutoPlay('list');							  
			    }*/		 		 		 
		 }	
		
	 });
 
},
 
 /*  内部函数  预播放,成功返回真,失败返回假   */    
   headplay:function(type,url)
  { 	  	  	 
    type=type||'url'; url=url||this.url;   
    switch(type)
	{		
     case 'url':				
	   // 指定线路播放检测(urljmp),如果url含有设置内容将直接调用设置线路播放,优先级最高。	  
	   var urljmp=this.lsplay('urljmp',url);	  
	   if(urljmp!=='')
	   {	
	   this.onflag='auto';	   
	   this.echo("服务器正在解析中，请稍后...", true);	   
	   $(this.player).html('<iframe  width="100%" height="100%" src="' + urljmp + url + '" frameborder="0" border="0" marginwidth="0" marginheight="0" scrolling="no"  allowfullscreen="true"  webkitallowfullscreen="true" mozallowfullscreen="true"></iframe>');     	 	
	   this.log("当前播放(指定线路)："+urljmp + url);       
	   return true;		
	   }	  	  
	   // url直链检测(urlurl),如果url含有设置内容将直链打开	
	   if(this.lsplay('urlurl',url))
	   {
	   this.onflag='auto';		
	   $(this.player).html('<iframe  width="100%" height="100%" src="' + url + '" frameborder="0" border="0" marginwidth="0" marginheight="0" scrolling="no" allowfullscreen="true"  webkitallowfullscreen="true" mozallowfullscreen="true"iframe>');     	 	  	
	   this.log("当前播放(直链)："+url);			
	    return true;   
	    }   
       //检测是否能本地播放	     
         var _url=_GET("url");	 
        if(this.lsplay('ext',url)){	
		  this.xyplay(url);		  
		  return true;		   
	    //QQ尾巴处理
		}else if(this.lsplay('ext',_url)){
		  this.xyplay(_url);		  
		   return true;				
		}			
		break;
		
      case 'flag':		
		//来源标签检测 直链播放		
		var flag=this.flaglist_array[this.pflag];		
	    if(this.lsplay('urlflag',flag))
	    {		   	
           this.onflag='auto';			
	       $(this.player).html('<iframe  width="100%" height="100%" src="' + url + '" frameborder="0" border="0" marginwidth="0" marginheight="0" scrolling="no" allowfullscreen="true"  webkitallowfullscreen="true" mozallowfullscreen="true"></iframe>');     	 	  	 
		   if(this.title){document.title = "正在播放:【" + this.title + "】part " + (Number(this.part) + 1) + "-- " + this.mytitle;}  	
		   this.log("当前播放(直链)："+url);		   
		   return true;		   
	     }
		//来源标签检测 云播放
	    if(this.lsplay('playflag',flag)){this.xyplay();return true;}		
		break;	
	
	case 'type':
	    var type=url;
	    if(this.lsplay('type',type)){this.xyplay(url);return true;}		
		break;	
	}	
   	 
     return false;

	},
		
/*  内部函数  智能检测播放    */	
  AutoPlay:function(type,url,play) 
  { 			
	
	 switch(type)
	 {		 
		 //来自播放列表		 
		 case 'list':
		     url=url||this.playlist_array[this.part];
			 play= play||url;
			 setCookie($this.listname, this.part, $this.timeout);
			 if(this.headplay('url',url) || this.headplay('type',play) || this.headplay('flag',url)){return;}else{this.getvideo('url',url);}  			 
			 //this.jxplay(this.myurl,url,false)			 			 		   
		     break;		
		//来自线路列表	
          case 'line' :		    
		  url=url||this.url;		  
		  this.jxplay(this.myurl,url);						  
          break;		
	  
	  }	
   },
		
 /*  内部函数  解析播放    */ 
    jxplay:function(num,word,nosave) { 	  
   num=num|| this.myurl; word=word||this.url;nosave=nosave||false;
     setCookie("live_num", "", $this.timeout);	 
	 if(!nosave){setCookie("url_num", num, $this.timeout);this.myurl=num;this.onflag='line';}   	  	  	  	    
     if(this.url_array.length>0 )
	 { 
       if(this.myurl>this.url_array.length){this.myurl=0;} var url=this.url_array[this.myurl]+word;	   
	   //使用play.html加载
	   //url="play.html?url="+ encodeURIComponent(url);
         $(this.player).html('<iframe name="zzapi" id="zzapi" width="100%" height="100%" src="' + url +'" frameborder="0" border="0" marginwidth="0" marginheight="0" scrolling="no" allowfullscreen="true"></iframe>');         
       
	   this.log("当前播放(解析)："+url);  
     }else{	
         
             
		this.errorHandler('解析失败！',true);				
	 }
  
   },
  
  /* 内部函数  直播播放   */  
    liveplay:function (num,nosave) 
  {    
	nosave=nosave||false;
	if( "undefined" !== typeof this.play.define.live_url && num!=="" ) 
	{ 
     var url=this.play.define.live_url[num];
     document.title = "正在直播:【" + num + "】" + "--" + this.mytitle;	 
	 this.live_num=num;this.relive();
	 if(!nosave){setCookie("live_num", num, $this.timeout);}else{setCookie("live_num", "", $this.timeout);}
	 setTimeout(url,0);

	}
  },
  
   /* 外部简化函数  直播播放   */  
    live:function (url,myplay) 
  {    
       this.xyplay(url,1,myplay);
  }, 
   
      /* 外部简化函数  链接播放   */  
    href:function (url) 
  {    
       this.echo(url,false,true);
       $(this.list).hide();
  }, 
   
        /* 外部简化函数  链接跳转   */  
    jmp:function (url) 
  {    
      location.href=url;
  }, 
   
   
   
  /* 内部函数  https协议自适应   */
  
   lshttps:function (word){
      var protocol=getCookie("protocol");
	  //https访问http资源时尝试替换协议
	  if(protocol==="" ){
		  protocol=(/https:/i.test(word)) ? "https:":"http:";
		 if("https:"===location.protocol && "http:"===protocol){		 
		   setCookie("protocol", protocol, $this.timeout);
           location.protocol=protocol;			
           this.log("当前协议："+location.protocol+"=>资源协议:"+protocol);		           
		   return 0;       		   
		  } 
      //替换成功
	  }else if(protocol===location.protocol){ 		  
		   setCookie("protocol", "", 0);			 
		   return 1;			 
       //替换失败
	  }else{
		   return -1;		  		  
	  }  
   },
   
  /* 内部函数  本地播放   */    
  xyplay:function (word,live,myplay) 
  {   
     live=live || _GET('live')?1:0;
     myplay=myplay || this.myplayer;
	
    word=word||this.playlist_array[this.part];
	
   //https协议自适应	
   //if(this.play.off.lshttps==="1"){if(this.lshttps(word)===-1){word=word.replace("http:","https:");};}
     if(this.play.off.lshttps==="1"&& "https:"===location.protocol ){word=word.replace("http:","https:");}
	 
         //this.onflag='yun';
         
	 setCookie("list_num", this.part, $this.timeout);
   
          var url=""+myplay + "/?live="+live+"&autoplay="+this.autoplay+"&url="+Base64.encode(word,true)+"&headtime="+this.play.play.all.headtime+"&endtime="+this.play.play.all.endtime;
	 
	 $(this.player).html('<iframe  width="100%" height="100%" src="' +"player/?url="+ encodeURIComponent(url) + '" frameborder="0" border="0" marginwidth="0" marginheight="0" scrolling="no" allowfullscreen="true"></iframe>');	
	 
	 if(this.title && !live){				
	          try{
                           top.document.title = "正在播放:【" + this.title + "】part " + (Number(this.part) + 1) + "-- " + this.mytitle;
                    
                   }catch(error){
                            document.title = "正在播放:【" + this.title + "】part " + (Number(this.part) + 1) + "-- " + this.mytitle;
                            
                }
                 
	 }  	

	
    if(!live){		
		this.live_num="";setCookie("live_num",this.live_num, $this.timeout); 
		this.onflag='yun';	
		this.log("当前播放(云播)："+word);	


		
	}else{
	    this.onflag='live';	 
		this.log("当前播放(直播)："+word);
    }

          
   },      
   /* 共用函数    云播 上集  */   
   video_front: function () 
   {  		
	if (Number(this.part)<= 0) {return false;}
	this.part--;	    	
    this.xyplay();   
   },        
  /* 共用函数  云播 下集  */   
  video_next: function () 
  {
	if (Number(this.part) + 1 >= this.playlist_array.length) {return false;}	
	this.part++;	  
    this.xyplay();   
  },   
  /* 共用函数  云播  停止处理  */    
   endHandler: function () 
   {
	   this.video_next();
   }, 
  
  
 /*  内部函数，加载广告  */    
loadad:function(){    
	if (this.adsTime > 0) 
	{		
	$(this.playad).html('<iframe  width="100%" height="100%" src="' + this.adsPage + '" frameborder="0" border="0" marginwidth="0" marginheight="0" scrolling="no"  allowfullscreen webkitallowfullscreen mozallowfullscreen ></iframe>');     	
        $(this.playad).show();
    }	 
	  setTimeout(function(){$(this.playad).empty().hide();$(this.player).show();},this.adsTime * 1000);
},
   
 /*   内部函数，刷新线路列表   */
 reline:function() 
 {		   
        $(this.line).empty();		
    //如果非搜索(wd)，则显示自动切换   
	if(this.type!=="wd"){		
		if(this.onflag==='auto')
		{		
		$(this.line).append('<li class="click_work"  style="'+  this.play.style.line_on +'" type="line" num="auto"> 自动√</li>');
		}else{
		$(this.line).append('<li class="click_work" type="line" num="auto">自动</li>');				
		}
	}

   //如果选择标志为云播或存在剧集数据或可本地播放,则显示云播
   if(this.play.off.yun==="1" && (this.onflag==='yun' || this.playlist_array.length > 0 || this.lsplay('ext',this.url)))
   {  
   
         //如果选择标志为云播，则选中云播
      if(this.onflag==='yun') 
	   {
          $(this.line).append('<li class="click_work"  style="'+  this.play.style.line_on +'" type="line" num="yun"> 云播放√</li>');
       }else{
          $(this.line).append('<li class="click_work" type="line" num="yun">云播放</li>');          
	   }	
	 }
    //如果非搜索(wd)且显示开关为开且解析，则显示线路
    
	if(this.type!=="wd" && this.play.style.line_show==="1" && "undefined"!==typeof this.play.define.jx_url && this.play.define.jx_url.length >0 )
	{          
		for (var i=0,len=this.play.define.jx_url.length;i<len;i++)
		{		    
             //如果如果选择标志为线路且与缓存线路相同则选中
		  if (this.onflag==='line'&& Number(this.myurl) ===i ) 
		    {
                $(this.line).append('<li class="click_work" style="' +this.play.style.line_on +'" type="line" num="' + i + '"> 线路' + (i+1) +'√</li>');
            } else {
                $(this.line).append('<li class="click_work" type="line" num="' + i + '"> 线路' + (i+1) + '</li>');
            }
        }
		
		
	};	
   //自定义链接
     if(this.play.off.mylink==="1"){	   	     	 			
	 for( var key in $this.play.define.jx_link){if(key!==""){$(this.line).append('<li class="click_work" type="link" num="'+ key +'">'+ key + '</li>');} };	
     }
  
     //使用说明
    if(this.play.off.help==="1"&& !this.app){ $(this.line).append('<li class="click_work" type="line" num="h">使用说明</li>');}	  		  
 
    if(this.play.off.live==="1"){this.relive();}
    
 },
  

 //刷新直播		
  relive:function() 
  {
	$(this.plive).empty();
	
	
	 for( var key in $this.play.define.live_url) {
	 	
		 if (key===this.live_num && 'live'===this.onflag){
			  
	 $(this.plive).append('<li class="click_work " style="' +this.play.style.line_on +'" type="live" num="'+ key +'">'+ key + '√</li>'); 
		 }else{
			 
		  $(this.plive).append('<li class="click_work" type="live" num="'+ key +'">'+ key + '</li>'); 
		 }
	 };	
  },


  /*  内部函数 后台刷新播放列表   */
   relist:function(autoflag) 
  {
     //显示用于检测滚动条  
     $(this.flaglist).show(); $(this.playlist).show();	 
     this.reflaglist();	this.replaylist(null,autoflag);	  	   	 	  
     //检测并设置滚动条  
     this.setcroll();	
     //隐藏,恢复现场	
     $(this.flaglist).hide(); $(this.playlist).hide(); 
    },
    
  /*  内部函数 刷新来源列表  */   
   reflaglist:function (flag)
   {
        $(this.flaglist).empty();  this.flaglist_array=[];	   
	 for (var i=0,len=this.list_array.length;i<len;i++)
	 {		   
	    this.flaglist_array.push(this.list_array[i].flag);		 
	    if (i === this.pflag) 
	    {
                 $(this.flaglist).append('<li   class="click_work" type="flag" val="' + this.list_array[i].flag + '" num="' + i + '" style="'+ this.play.style.play_on +'">' + this.list_array[i].flag + '</li>');
             }else{
                 $(this.flaglist).append('<li   class="click_work" type="flag" val="' + this.list_array[i].flag + '" num="' + i + '">' + this.list_array[i].flag + '</li>');
             }	  
	 }     
    },

   /* 内部函数  刷新剧集列表  */     
   replaylist:function (flag,autoflag){
  
   if(!flag)
   {
         flag=this.pflag; 
         //刷新换资源
         if (this.play.off.autoflag==="1" && autoflag===true) { flag= getCookie("pflag"); if(flag===""){flag=0;}else{flag++;}if(flag+1>this.list_array.length){flag=0;}setCookie("pflag",flag, this.timeout);this.pflag=flag;}    
   }
     if("undefined"!==typeof this.list_array[flag] && "undefined"!==typeof this.list_array[flag].video){    
        
     $(this.playlist).empty(); this.playlist_array=[]; var list=this.list_array[flag].video; 
 
     //this.part=getCookie(this.listname)||(Number(data.part)-1);if(this.part>list.length || !this.part){this.part=0;}
 
     for (var i=0,len=list.length;i<len;i++)
	 {	  	   
	    var array = list[i].split("$");			
		//播放列表影片名过滤
		var pat = new RegExp(this.play.match.video);		  
		if(!this.play.video_match || !pat.test(array[0]))
		{			
		    this.playlist_array.push(array[1]); 								
                   if (i === Number(this.part))
	           {
                     $(this.playlist).append('<li class="click_work" type="list" num="' + i + '" style="'+ this.play.style.play_on + '">' + array[0] + '√</li>');
                 } else {
                   $(this.playlist).append('<li class="click_work" type="list" num="' + i + '">' + array[0] + '</li>');
            }			
	    }		 		  	  
	   }

	}   
	   
    },
     
  /*   内部函数   检测并设置滚动条   */ 
   setcroll:function()
   {		
      $(this.plist).scrollTop(10);
      if( $(this.plist).scrollTop()>0 ){$(this.plist).css("right","0px");}else{$(this.plist).css("right","-30px");};
      $(this.plist).scrollTop(0);  
   },

  /*  内部函数 检测播放  */  
lsplay:function (type,word) 
{	
	word=word||this.url;	
    switch(type)
	{		
	  //检测扩展名是否能本地播放
     case 'ext' :
	    if (word === ""){ return false;}
        var n = word.search(/\.(ogg|mp4|webm|m3u8)$/i);
        if (n !== -1){
          return true;
        } else if (this.type !== "") {
          return isurl(this.play.match.playflag, this.type);
        } else {
         return false;
        }
        break;
      //检测播放文件类型
     case 'type' :
	if (word === ""){ return false;}
        var n = word.search(/(ogg|mp4|webm|m3u8|hls|video)$/i);
        if (n !== -1) 
		{
          return true;
        } else if (this.type !== "") {
          return isurl(this.play.match.playflag, this.type);
        } else {
         return false;
        }
      break;

	 //检测urljmp设置  
      case 'urljmp' :  
         if (this.play.match.urljmp === "" || word === ""){return false;}
         var strs = new Array();
         var sjmp = new Array();
         strs = this.play.match.urljmp.split(",");
         for (var i = 0; i < strs.length; i++) {
              sjmp = strs[i].split("->");
             if (word.indexOf(sjmp[0]) > -1){return sjmp[1];}
         }
         return ""; 
      //检测urlurl设置  
      case 'urlurl' :  
             return isurl(this.play.match.urlurl, word);
      //检测urlflag设置，如果来源标签含有设置内容将直链打开。 
      case 'urlflag' :			
	     return isurl(this.play.match.urlflag, word);	
     //检测playflag设置，如果来源标签含有设置内容将调用ck播放器播放。 
      case 'playflag' :		
	     return isurl(this.play.match.playflag, word);	
      default: 
	     break;
    
    }		
},
 
  /* 公共函数： 显示或隐藏线路列表   */
    online:function(bottom)
	{      	   
	   if($($this.line).css("display")==="none")
	   { 
	    $this.reline();
	    $($this.line).show();	
	   }else{		   
	     if(this.autohide){$($this.line).hide();}
	   }		
	 },  
    
   /* 公共函数： 显示或隐藏播放列表   */
    onlist:function()
	{		 
	  if($($this.playlist).css("display")==="none"){$this.relist();}  
	  if($this.play.style.flaglist_show==="1"){$($this.flaglist).slideToggle();}
	  if($this.play.style.playlist_show==="1"){$($this.playlist).slideToggle();}
	 },
   
  /* 公共函数： 输出 用户友好提示   */
  echo:function(word, lslogo, lsurl)
  {		
		//$(this.player).show();$(this.playad).hide;	  	
        if (lsurl) 
		{
          // if(this.lshttps(word)===-1){word=word.replace("http:","https:");}
                   
                if(this.play.off.lshttps==="1"&& "https:"===location.protocol ){word=word.replace("http:","https:");}
		   
		   $(this.player).html('<iframe  width="100%" height="100%" src="play.html?url=' +encodeURIComponent(word) + '" frameborder="0" border="0" marginwidth="0" marginheight="0" scrolling="no" allowfullscreen="true"  webkitallowfullscreen="true" mozallowfullscreen="true"></iframe>');
        } else {
           if (lslogo && this.loadimg) 
		   {
            $(this.player).html("<strong><br><br><br><br><br>" + word + "</strong><br><img border='0' src='"+this.loadimg+"'><br>");
           }else{
            $(this.player).html("<strong><br><br><br><br><br>" + word + "</strong>");
           }
       }		  		  		  
  },
   
/*  公共函数   输出 超文本信息  */  
   html:function(word){
		$(this.player).html(word);			  		  		  
	  },
      
   /*   内部函数：输出 高亮调试信息  */    
    onVer:function(){	
         var message="XyPlayer X3 by http://nohacks.taobao.com";
		 if (typeof console === 'object') {          
		 console.log("\n %c XyPlayer X3 %c 00000\n\n", "color: #fadfa3; background: #030307; padding:5px 0;", "background: #fadfa3; padding:5px 0;");
         } else if (typeof opera === 'object') {
            opera.postError(message);
         } else if (typeof java === 'object' && typeof java.lang === 'object') {
            java.lang.System.out.println(message);
         }		
	},
   
   /*   公共函数：输出 调试信息  */    
    log:function(message){	
		if( "undefined"!==typeof this.play && this.play.off.log==="1"){		
		 if (typeof console === 'object') {
            console.log(message);
         } else if (typeof opera === 'object') {
            opera.postError(message);
         } else if (typeof java === 'object' && typeof java.lang === 'object') {
            java.lang.System.out.println(message);
         }		
		}		
	},
    
  	
/* 内部函数, 获取资源(ajax)初始 回调函数   */
   beforeSend:function(code,data)
   {  
     if(data){return;};	 
	 switch(code)
	 {		 		   
		  //获取配置参数
		  case 0:
		     this.echo("服务器正在载入配置,请稍后....");			 
             break;		  
		
		  //获取线路列表
		  case 1:
		    this.echo("服务器正在获取线路列表,请稍后....", true);
             break;
		  
          //url查询数据库
		  case 2:
		    this.echo(this.play['all']['link_info'], true);
		    break;	

		  //获取云资源
		  case 3:
		    this.echo(this.play['all']['yun_info'], true);
		
		//后台获取云资源					 	
                 default: 
	            break;
	 }
  },
  
  /* 共用函数  加载错误处理   */  
 errorHandler:function (word) 
 { 
    word=!word ? '视频加载失败': word;	
    this.log("错误：" + word);
    var reload = getCookie("reload");
    if (reload !== window.location.href) {
        setCookie("reload", window.location.href, $this.timeout);   
        window.location.replace(window.location.href);
    }else{      
	setCookie("reload", "", $this.timeout);
        if("undefined"!==this.url_array && this.url_array.length>0){this.jxplay(this.myurl,this.url);}else{this.href("404.html"); }
	
    }  
 }
 
 //end
  }; 
  
window.xyplayer = xyplayer;


})();
